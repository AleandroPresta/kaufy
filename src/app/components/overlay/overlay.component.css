:host {
    display: block;
    position: fixed;
    top: 0;
    /* The clip path uses 0.05 to 0.95 for the main content area (0.9 of total width). */
    /* We want this 0.9 part to correspond to 100vw. */
    width: calc(100vw / 0.9); /* Approx. 111.11vw */
    /* Adjust left position so the 100vw clipped content is centered. */
    /* This means shifting left by the width of the left wave (0.05 of total new width). */
    left: calc(-0.05 * (100vw / 0.9)); /* Approx. -5.55vw */
    height: 100vh;
    z-index: 999; /* Ensure overlay is above everything */
    clip-path: url(#overlayClipPath); /* Assumes #overlayClipPath is defined in overlay.component.html */
    pointer-events: none; /* Allow clicks to pass through */
    will-change: transform, opacity; /* Performance optimization */
}

:root {
    /* Default values for animation variables - will be overridden by JS */
    --animation-duration: 1s;
    --animation-delay-1: 0s;
    --animation-delay-2: 0.25s;
    --animation-delay-3: 0.5s;
    --progress-animation-duration: 2s;
}

/* Animation that goes from middle → up → down → back to middle */
@keyframes middle-up-down {
    0% {
        transform: translateY(0);
    } /* Start at middle */
    25% {
        transform: translateY(-20px);
    } /* Move up */
    50% {
        transform: translateY(0);
    } /* Back to middle */
    75% {
        transform: translateY(20px);
    } /* Move down */
    100% {
        transform: translateY(0);
    } /* Return to middle */
}

/* Progress bar animation - completes at 60% of the animation cycle */
@keyframes progress-fill {
    0% {
        width: 0%;
    }
    50% {
        width: 100%;
    } /* Complete at 60% of the animation */
    100% {
        width: 100%;
    } /* Keep at 100% for the rest of the animation */
}

/* Progress bar glow animation */
@keyframes progress-glow {
    0% {
        opacity: 0;
        transform: translateX(-100%);
    }
    25% {
        opacity: 0.6;
        transform: translateX(-50%);
    }
    50% {
        opacity: 1;
        transform: translateX(0%);
    }
    75% {
        opacity: 0.6;
        transform: translateX(50%);
    }
    100% {
        opacity: 0;
        transform: translateX(100%);
    }
}

/* Sequential animations - each box starts when previous reaches the top */
.animate-middle-up-down-1 {
    animation: middle-up-down var(--animation-duration) ease-in-out infinite;
    animation-delay: var(--animation-delay-1);
}

.animate-middle-up-down-2 {
    animation: middle-up-down var(--animation-duration) ease-in-out infinite;
    animation-delay: var(--animation-delay-2);
}

.animate-middle-up-down-3 {
    animation: middle-up-down var(--animation-duration) ease-in-out infinite;
    animation-delay: var(--animation-delay-3);
}

/* Progress bar animations */
.animate-progress-fill {
    animation: progress-fill var(--progress-animation-duration)
        cubic-bezier(0.25, 0.46, 0.45, 0.94) infinite;
    animation-delay: var(
        --animation-delay-1
    ); /* Start immediately with the first box */
    width: 0%; /* Ensure initial state is 0% */
}

.animate-progress-glow {
    animation: progress-glow var(--progress-animation-duration)
        cubic-bezier(0.25, 0.46, 0.45, 0.94) infinite;
    animation-delay: var(
        --animation-delay-1
    ); /* Synchronized with progress fill */
}
